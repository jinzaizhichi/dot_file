# > '~/.tmux/plugins/tpm/tpm' returned 127 (on macOS, w/ tmux installed using brew)
# This problem is because tmux's `run-shell` command runs a shell which doesn't read from user configs, thus tmux installed in `/usr/local/bin` will nobe found.



set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
# before any `run-shell` commands 
# run-shell 简写为 run:  execute a command without creating a new window
# If the command doesn't return success, the exit status is also displayed.

# Pane之间切换的快捷键
bind h selectp -L                       # 定位到左边窗口的快捷键
bind j selectp -D                       # 
bind l selectp -R                       #
bind k selectp -U                       #


bind -T copy-mode-vi 0 send-keys -X start-of-line
bind -T copy-mode-vi : command-prompt -p "(跳到第几行？行1在最底 : )" "send -X goto-line \"%%%\""

# 上下左右:
# ^[[1;5A^[[1;5B^[[1;5D^[[1;5C

# tmux还没map 'C-,'  在windows terminal下 不知道为啥变成ctrl l


set -g prefix 'C-y'

## -g: global session option,  -a append to string options   -s change server(not session) options 
set -g default-terminal "xterm-256color:RGB"  # 支持256色显示
# set -g default-terminal "tmux-256color"
# set -ga terminal-overrides ',*256col*:Tc'
# set -sa terminal-overrides ',xterm-256color:RGB'
# set -ga terminal-overrides ",alacritty:Tc"




# 查看键绑定
# tmux lsk -Tcopy-mode | less


# -N: 放到buffer? starts without the preview.  This command works only if at least one client is attached
# todo: 把prompt去掉
bind -T copy-mode-vi 1                 command-prompt -N -I 1  "send -N \"%%%\""
bind -T copy-mode-vi 2                 command-prompt -N -I 2  "send -N \"%%%\""
bind -T copy-mode-vi 3                 command-prompt -N -I 3  "send -N \"%%%\""
bind -T copy-mode-vi 4                 command-prompt -N -I 4  "send -N \"%%%\""
bind -T copy-mode-vi 5                 command-prompt -N -I 5  "send -N \"%%%\""
bind -T copy-mode-vi 6                 command-prompt -N -I 6  "send -N \"%%%\""
bind -T copy-mode-vi 7                 command-prompt -N -I 7  "send -N \"%%%\""
bind -T copy-mode-vi 8                 command-prompt -N -I 8  "send -N \"%%%\""
bind -T copy-mode-vi 9                 command-prompt -N -I 9  "send -N \"%%%\""

#  分号被autohotkey改了，输入不了真正的分号
# bind -T copy-mode-vi '\;' send-keys -X jump-again


set -g pane-border-status top
# set -g pane-border-format "#{pane_index} #{pane_current_command} #P #T"
set -g pane-border-format "#T"
set -g pane-active-border-style fg=black,bg=colour7
set -g pane-border-style fg=colour108
# set -g pane-border-style 'fg=#123456,bg=default'


# inactive/active  windows styles 改的是windows，而非pane
# set -g window-style 'fg=#123456,bg=default'
# set -g window-active-style 'fg=default,bg=default'   # terminal的white不是000000，两个white叠在一起，背景变得更暗
 
#  没有pane-style
# set -g pane-style 'fg=#123456,bg=default'
# set -g pane-active-style 'fg=default,bg=default'   # terminal的white不是000000，两个white叠在一起，背景变得更暗

# 符号 代码 代号 变量 的含义
#S Session name
#H Hostname of local host
#h Hostname of local host without the domain name

#F Current window flag
#I Current window index
#T Current window title  用于pane的设置时	pane title
#W Current window name

#P Current pane index
#D	pane id

#(date)	shell command

## A literal `#’

#logging: 还没试
#set-hook -g 'after-new-pane' 'run-shell "pipe-pane -o 'cat >>~/output.#S:#I-#P'"'
set -g default-shell /bin/zsh

# tmux如何将内容复制到系统clipboard? - 夏路的回答 - 知乎
# bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "nc localhost 8377"

unbind f
# 问号要转义
# 从底部往上搜
bind f run-shell 'tmux copy-mode; tmux send "?"'
# bind f run-shell "tmux copy-mode; tmux send /"

# 改了tmux.conf, 有时要退出session后才生效
# 按了prefix, 再?   ,  看现在的bind

#"bind" is an alias for "bind-key", "bind-k" "bin"等开头缩写同理, 只要不引起系统误会
#set-option即set
#set-window-option即setw



#记作repane吧
bind r break-pane

#会报错
# 学习怎么用prompt提示
# bind s command-prompt -p "send pane to:"  "join-pane -t '%%'"


# u是update的意思
bind u source-file ~/dot_file/tmux_tools_wf/tmux.conf \; display "wf tmux: uploaded!"
#tmux.conf \处，少了\会有小问题
# https://github.com/tmux/tmux/issues/1598
unbind C-r

bind c new-window -c "#{pane_current_path}"
# splitting panes
bind '-' split-window -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"

# tmux-how-to-display-line-numbers-in-copy-mode
# bind -T copy-mode-vi = split-window -h -p 90 'seq 24 -1 1;sleep 15'
bind -T copy-mode-vi t  split-window -h -l 3 -b "printf '\e[38;5;0m\e[48;5;226m' && seq 500 -1 1 && echo -n 0 && read" \; selectp -l

bind _ run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 80" # main-pane的尺寸占整个窗口的比例
bind | run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 80"

# with modern computers it is ok to set this option to a high number.
set -g history-limit 50000

# status bar infomation
set -g status-keys vi # status bar的键位
# 少了-g的话,开了新session会报no target
set -g status on
set -g status-left-length 50
# set -g status-left "@#H session:#S|面板:#P  "
set -g status-left "@#H session:#S"
set -g status-justify "centre"
# dim让颜色没那么抢眼
set -g status-right-length 40
# set -g status-right '#[fg=red,dim]%d号 %H:%M '
set -g status-right ' '
set -g status-bg white

# set -g status-left-bg  white
# set -g status-left-fg '#2EaE2E'

if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g status-utf8 on'

set -g mouse on
bind -n WheelUpPane   selectp -t= \; copy-mode -e \; send -M
bind -n WheelDownPane selectp -t= \;                 send -M

# keybindings to make resizep easier
bind -r C-h resizep -L
bind -r C-j resizep -D
bind -r C-k resizep -U
bind -r C-l resizep -R

# Highlight active window
# 设置window属性
set -g renumber-windows on
# setw -g window-status-current-attr bright
# set -g window-status-current-fg '#eeeeee'
# set -g window-status-current-bg '#00aa22'



# status bar updates every 15s by default**, change to 1s here
# a lower latency might have negative battery/cpu usage impacts)
set -g status-interval 5


# setw -g window-status-format "#I.#{window_current_command}:#T》"  #T - current pane title
set -g window-status-format '【#I’ #(pwd="#{pane_current_path}"; echo ${pwd####*/})】'
set -g window-status-current-style fg=colour208,bg=default
set -g window-status-current-format '#F（#I’ #(pwd="#{pane_current_path}"; echo ${pwd####*/})）'  # 这里用单引号 会不生效
#   #F 显示这些flag
#   *         Denotes the current window.
#   -         Marks the last window (previously selected).
#   #         Window is monitored and activity has been detected.
#   !         A bell has occurred in the window.
#   ~         The window has been silent for the monitor-silence interval.
#   M         The window contains the marked pane.
#   Z         The window's active pane is zoomed.


# 此类配置可以在命令行模式中输入show-options -g查询
set -g display-time 3000                   # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set -g repeat-time 500                    # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒




# 此类设置可以在命令行模式中输入show-window-options -g查询
# Start Window Numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# 窗口切分快捷键
bind q "kill-pane" # 使用q来关闭窗口 kill-pane必须加引号
unbind x

# unbind [


# Allows for faster key repetition
set -s escape-time 0
setw -g monitor-activity on
#这行会导致已有动静就弹窗，别加
# set -g visual-activity on



# 不使用prefix键，使用Ctrl和左右方向键切换窗口
# -n :work without the need for the prefix key
bind -n "C-h" select-window -t :-
bind -n "C-l" select-window -t :+



# 删掉了~/.tmux, tmux的东西都在~/dot_file/tmux_tools_wf,貌似导致tpm用不了
#-g : set a global option
set -g @plugin 'tmux-plugins/tpm'

#Installing plugins
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'soyuka/tmux-current-pane-hostname'


set -g @plugin 'tmux-plugins/tmux-logging'
set -g @logging-path "$HOME/d/.tmux_log_by_plugin_leo"

set -g @screen-capture-key 'T'  #保存在home下，不受上面的控制

# [[==========================打通tmux和系统、nvim的粘贴板。反应有点慢================
set -g @plugin 'tmux-plugins/tmux-yank'  # 
setw -g mode-keys vi  # mode to use in copy and choice modes (vi/emacs)
bind -T copy-mode-vi 'H' send '^'
bind -T copy-mode-vi 'L' send '$'

# Copy mode has a separate set of commands which
# are passed using the -X flag to the send-keys command
# 被tmux-yank覆盖了:
# bind -T copy-mode-vi 'y' run-shell 'tmux send-keys -X copy-end-of-line && tmux paste'

# bind -T copy-mode-vi 'yy' send-keys -X copy-end-of-line
# 不行
# bind -T copy-mode-vi M-j send 5j
# 和上面的一样

bind 'a' run-shell "tmux copy-mode; tmux send-keys k"

bind 'v' run-shell "tmux copy-mode; tmux send 'v'"
bind 'V' run-shell 'tmux copy-mode; tmux send 'V''
bind 'space' display '待定'
bind -T copy-mode-vi 'Enter' display '用y来复制'
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'space' send -X begin-selection
bind -T copy-mode-vi 'c' send -X rectangle-toggle
# 不行
# bind -T copy-mode-vi 'C-c' run-shell 'tmux rectangle-toggle && tmux send "v" ; tmux echo "block-mode" ; '

# bind p run-shell "tmux paste"  # 和vim相通      不需要了,直接ctrl v
# bind -t 'v' paste-selection

# 不知道怎么用
# bind -T copy-mode-vi ',' send-keys -X jump-reverse
# ==========================打通tmux和系统、nvim的粘贴板。反应有点慢================]]

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
 # ~/dot_file/.config/tmux/plugins/tpm/tpm  软连接到了：
run-shell '~/dot_file/tmux_tools_wf/plugins/tpm/tpm'
